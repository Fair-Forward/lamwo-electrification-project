import React from 'react';
import { ReferenceProp, Placement } from '../../Position';
export interface ConnectedOverlayHookOptions extends ConnectedOverlayCommon {
    closeOnBodyClick?: boolean;
    closeOnEscape?: boolean;
    appendToBody?: boolean;
    elementType?: string;
}
export interface ConnectedOverlayCommon {
    className?: any;
    modifiers?: any;
    followCursor?: boolean;
    placement?: Placement;
    style?: any;
}
export declare const useConnectedOverlay: (triggerRef: ReferenceProp, options?: ConnectedOverlayHookOptions | undefined) => {
    overlayIndex: number | null;
    portalIndex: number | null;
    isOpen: boolean;
    setOpen: React.Dispatch<React.SetStateAction<boolean>>;
    ref: React.RefObject<HTMLElement>;
    popperRef: React.MutableRefObject<any>;
    ConnectedOverlay: ({ children }: any) => JSX.Element;
};
